[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "lenskit"
description = "Toolkit for recommender systems research, teaching, and more."
authors = [{ name = "Michael Ekstrand", email = "mdekstrand@drexel.edu" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
]
requires-python = ">= 3.11"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE.md"]
dynamic = ["version"]
dependencies = [
  "typing-extensions ~=4.12",
  "pandas ~=2.0",
  "pyarrow >=20,<21",
  "numpy >=1.25",
  "scipy >=1.11",
  "torch ~=2.4",
  "more-itertools >=9.0",
  "threadpoolctl >=3.0",
  "structlog >=23.2",
  "rich >=13.5",
  "pyzmq >=24",
  "click ~=8.1",
  "requests ~=2.28",
  "psutil >=6",
  "py-cpuinfo >=9.0",
  "pydantic ~=2.7",
  "pydantic-settings~=2.8",
  "humanize ~=4.2",
  "prettytable ~=3.14",
  "xopen ~=2.0",
  "lazy-loader >=0.4",
  # torch inductor needs setuptools
  "setuptools >=80",
  "deepmerge>=2.0",
]

[dependency-groups]
test = [
  "pytest ~=8.2",
  "pytest-doctestplus >=1.2.1,<2",
  "pytest-cov >=2.12",
  "pytest-benchmark ~=5.1",
  "pytest-retry ~=1.7",
  "hypothesis >=6.16",
  "pyyaml ~=6.0",
]
doc = [
  "packaging >=25.0",
  "sphinx >=4.2",
  "sphinxext-opengraph >=0.5",
  "sphinxcontrib-bibtex >=2.0",
  "pydata-sphinx-theme ~=0.16.0",
  "myst-nb >=0.13",
  "sphinx-togglebutton >=0.3.2,<0.4",
  "sphinxcontrib-mermaid >=1.0.0,<2",
  "sphinx-copybutton>=0.5.2",
  "sphinx-new-tab-link>=0.8.0",
]
demo = [
  "notebook >=6",
  "nbval >=0.9",
  "matplotlib ~=3.4",
  "nbformat >=5.2",
  "pyprojroot >=0.3",
  "seaborn >=0.13.2,<0.14",
]
reporting = ["coverage >=5"]
package = [
  "maturin ~=1.0",
  "lazy-loader >=0.4",
  "packaging >=25.0",
]
scripting = [
  "docopt-ng >=0.9.0",
  "tomlkit ~=0.13.2",
  { include-group = "package" },
]
dev = [
  "cibuildwheel ~=2.23",
  "unbeheader ~=1.3",
  "ruff >=0.2",
  "pre-commit ~=4.0",
  "pyright >=1.1",
  "line_profiler",
  "ipython >=7",
  "sphinx-autobuild >=2021",
  # stub files
  "pandas-stubs >=1.5,<3",
  "pyarrow-stubs >=11",
  "scipy-stubs >=1.14.1.6,<2",
  { include-group = "test" },
  { include-group = "doc" },
  { include-group = "demo" },
  { include-group = "reporting" },
  { include-group = "package" },
  { include-group = "scripting" },
  "zstandard>=0.23.0",
  "maturin>=1.8.3",
  "py-spy>=0.4.1",
  "nox>=2025.5.1",
]
cpu = ["torch ~=2.4"]
gpu = ["torch ~=2.4"]

[project.optional-dependencies]
sklearn = ["scikit-learn ~=1.2"]
funksvd = []
hpf = ["hpfrec~=0.2.12"]
implicit = ["implicit >=0.7.2"]
gnn = ["torch_geometric ~=2.6"]
notebook = ["ipywidgets ~=8.0"]
ray = ["ray ~=2.42"]
tune = [
  "ray[tune] ~=2.42",
]

[project.urls]
homepage = "https://lenskit.org"
documentation = "https://lkpy.lenskit.org"
source = "https://github.com/lenskit/lkpy"

[project.scripts]
lenskit = "lenskit.cli:main"

[project.entry-points."lenskit.cli.plugins"]
lenskit-config = "lenskit.cli.config:config"
lenskit-data = "lenskit.cli.data:data"
lenskit-doctor = "lenskit.cli.doctor:doctor"
lenskit-task = "lenskit.cli.task:task"
lenskit-train = "lenskit.cli.train:train"
lenskit-tune = "lenskit.cli.tune:tune"
lenskit-recommend = "lenskit.cli.recommend:recommend"

# configure build tools
[tool.maturin]
profile = "release"
python-source = "src"
module-name = "lenskit._accel"

[tool.cibuildwheel]
skip = ["*-musllinux_i686"]

# configure UV sources
[tool.uv]
conflicts = [[{ group = "cpu" }, { group = "gpu" }]]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", group = "cpu" },
  { index = "pytorch-gpu", group = "gpu" },
]

# [[tool.uv.index]]
# name = "lk-torch-cpu"
# url = "https://pypi.lenskit.org/torch/cpu"

[[tool.uv.index]]
name = "pytorch-gpu"
# url = "https://pypi.lenskit.org/torch/cu128"
url = "https://download.pytorch.org/whl/cu128/"
explicit = true

[[tool.uv.index]]
name = "pytorch-cpu"
# url = "https://pypi.lenskit.org/torch/cpu"
url = "https://download.pytorch.org/whl/cpu/"
explicit = true

# dev tool configuration
[tool.coverage.run]
relative_files = "true"
include = ["src/lenskit/*"]
omit = ["src/lenskit/_version.py"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]
unfixable = ["F401"]
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.lint.per-file-ignores]
# Importing PyTest fixtures triggers F811
"tests/*.py" = ["F811", "F401"]

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "testing",
  "first-party",
  "local-folder",
]
known-first-party = ["lenskit"]

[tool.ruff.lint.isort.sections]
testing = ["pytest", "hypothesis"]

[tool.pyright]
typeCheckingMode = "basic"
exclude = ["docs/*", ".pixi", ".venv", ".nox", "target", "build", "dist", "output"]
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
log_level = "INFO"
log_format = "[%(levelname)7s] [%(processName)s] %(name)s %(message)s"
log_cli_format = "[%(levelname)7s] %(asctime)s [%(processName)s] %(name)s %(message)s"
log_file_format = "[%(levelname)7s] %(asctime)s [%(processName)s] %(name)s %(message)s"
log_file_level = "DEBUG"
addopts = "--benchmark-skip"
doctest_plus = true
doctest_subpackage_requires = ["src/lenskit/hpf.py = hpfrec"]
consider_namespace_packages = true
filterwarnings = [
  "ignore:::pyarrow[.*]",
  "ignore:SoftmaxRanker.*:DeprecationWarning",
  "ignore:.*matrix subclass.*:PendingDeprecationWarning",
  "ignore:.*np.asscalar.*:DeprecationWarning",
  "ignore:.*deprecated create function*:DeprecationWarning",
  "ignore:.*importing the ABCs*:DeprecationWarning",
  "ignore:.*use_ratings option.*:UserWarning",
  "ignore:.*tensor support is in beta state.*:UserWarning",
]
markers = [
  "eval: mark the test as running the evaluator over custom data",
  "slow: mark the test as taking a larger-than-usual amount of time",
  "realdata: mark the test as using a real data set like ML-20M",
]
